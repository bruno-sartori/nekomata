{"version":3,"file":"time.js","sourceRoot":"","sources":["../../src/utils/time.ts"],"names":[],"mappings":"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","sourcesContent":["export const secondsToHours = (seconds: number) => seconds / 3600;\nexport const secondsToMinutes = (seconds: number) => seconds / 60;\n\nexport const isFloat = (n: number) => {\n  return Number(n) === n && n % 1 !== 0;\n}\n\nexport const floatToHHMM = (number: number) => {\n  let sign: any = (number >= 0) ? 1 : -1;\n  number = number * sign;\n\n  const hour = Math.floor(number);\n  let decpart = number - hour;\n  const min = 1 / 60;\n  decpart = min * Math.round(decpart / min);\n  let minute = Math.floor(decpart * 60) + '';\n\n  if (minute.length < 2) {\n    minute = '0' + minute;\n  }\n  sign = sign == 1 ? '' : '-';\n  const time = sign + hour + ':' + minute;\n\n  return time;\n}\n\nexport const floatToMMSS = (number: number) => {\n  let sign: any = (number >= 0) ? 1 : -1;\n  number = number * sign;\n\n  let minute: any = Math.floor(number);\n  let decpart = number - minute;\n  const sec = 1 / 60;\n  decpart = sec * Math.floor(decpart / sec);\n  let second = Math.floor(decpart * 60) + '';\n\n  if (minute.length < 2) {\n    minute = '0' + minute;\n  }\n\n  if (second.length < 2) {\n    second = '0' + second;\n  }\n\n  sign = sign == 1 ? '' : '-';\n  const time = sign + minute + ':' + second;\n\n  return time;\n}\n\nexport const getTimeString = (timeNumber: number, metric: 'hours' | 'minutes') => {\n  switch (metric) {\n    case 'hours':\n      return floatToHHMM(timeNumber);\n    case 'minutes':\n      return floatToMMSS(timeNumber);\n    default:\n      return floatToMMSS(timeNumber);\n  }\n};\n\n\nexport function secondsToHHMMSS(seconds: number) {\n  // Calcula as horas, minutos e segundos\n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const secs = Math.floor(seconds % 60);\n  \n  // Formata cada parte para ter dois d√≠gitos\n  const hoursStr = String(hours).padStart(2, '0');\n  const minutesStr = String(minutes).padStart(2, '0');\n  const secsStr = String(secs).padStart(2, '0');\n  \n  // Retorna a string no formato HH:MM:SS\n  return `${hoursStr}:${minutesStr}:${secsStr}`;\n}\n"]}