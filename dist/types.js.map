{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["\nexport interface ITestChild {\n  alsoNotRequired?: string;\n}\n\nexport interface ITest {\n  notRequired?: string;\n  notRequiredChild?: ITestChild;\n}\n\n// Tipo auxiliar para tornar todas as propriedades obrigatórias e profundas\ntype DeepRequired<T> = {\n  [P in keyof T]-?: T[P] extends object \n    ? T[P] extends (...args: any[]) => any \n      ? T[P] \n      : DeepRequired<Required<T[P]>>\n    : T[P];\n};\n\ndeclare type IRequiredTestChild = DeepRequired<ITestChild>;\ndeclare type IRequiriedTest = DeepRequired<ITest>;\n\n// Ajustando a configuração do logger para usar IRequiredContainerStyle para containerStyle\nexport declare type IRequiredConfig = Omit<DeepRequired<IRequiriedTest>, 'notRequiredChild'> & {\n  notRequiredChild: IRequiredTestChild;\n};\n\n\nexport type RangeTimings = {\n  start: number;\n  end: number;\n}\n\nexport type ChapterRange = {\n  title: string,\n  range: { start: number, end: number }\n};\n\nexport type CurrentlyGrabbed = {\n  index: number;\n  type: string;\n};\n\nexport type SeekableStyle = {\n  backgroundImage?: string;\n};\n\nexport type Progress = {\n  width?: string;\n  left?: string;\n};\n\ndeclare global {\n  interface Window { \n    FFmpegUtil: any;\n    FFmpegWASM: any; \n  }\n}\n"]}