{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACzD,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAEvC,OAAO,IAAI,EAAE,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAChC,OAAO,EAAE,cAAc,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnF,OAAO,yBAAyB,MAAM,iCAAiC,CAAC;AACxE,OAAO,oCAAoC,CAAC;AAC5C,OAAO,sBAAsB,CAAC;AAC9B,OAAO,qCAAqC,CAAC;AAC7C,OAAO,qBAAqB,MAAM,6BAA6B,CAAC;AAChE,OAAO,EAAE,sBAAsB,EAAE,eAAe,EAAE,MAAM,6BAA6B,CAAC;AACtF,OAAO,0BAA0B,MAAM,kCAAkC,CAAC;AAGnE,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAYtC;QACE,KAAK,EAAE,CAAC;QATV,eAAU,GAAmB,qBAAqB,CAAC;QAGnD,gBAAW,GAAoB,sBAAsB,CAAC;QAGtD,oBAAe,GAAY,KAAK,CAAC;QAK/B,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YACf,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,SAAS,EAAE,CAAC,CAAC,CAA6B,EAAE,EAAE;YAC7F,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACrC,CAAC,CAAkB,CAAC,CAAC;QAErB,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC,CAAC,CAA4B,EAAE,EAAE;YAC3F,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QACpC,CAAC,CAAkB,CAAC,CAAC;QAErB,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAwB,EAAE,EAAE;YACnF,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;QAC1C,CAAC,CAAkB,CAAC,CAAC;IACvB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;iCAGkB,GAAG,EAAE,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAA,CAAC,CAAC;mCACnC,IAAI,CAAC,eAAe;;;;KAIlD,CAAC;IACJ,CAAC;;AA1Ce,eAAM,GAAG,aAAa,AAAhB,CAAiB;AAGvC;IADC,OAAO,CAAC,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;4CACc;AAGnD;IADC,OAAO,CAAC,EAAE,OAAO,EAAE,eAAe,EAAE,CAAC;6CACgB;AAGtD;IADC,KAAK,EAAE;iDACyB;AAVtB,QAAQ;IADpB,aAAa,CAAC,eAAe,CAAC;GAClB,QAAQ,CA4CpB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { nekomataStyle } from './styles/nekomata.style';\nimport { provide } from '@lit/context';\nimport { ContentContext, SettingsContext } from './@types/contexts';\nimport init, { add } from 'lib';\nimport { contentContext, initialContentContext } from './contexts/content-context';\nimport UpdateContentContextEvent from './events/update-content-context';\nimport './components/content/file-uploader';\nimport './icons/icon-burguer';\nimport './components/settings/settings-menu';\nimport ShowSettingsMenuEvent from './events/show-settings-menu';\nimport { initialSettingsContext, settingsContext } from './contexts/settings-context';\nimport UpdateSettingsContextEvent from './events/update-settings-context';\n\n@customElement('nekomata-main')\nexport class Nekomata extends LitElement {\n  static override styles = nekomataStyle;\n\n  @provide({ context: contentContext })\n  contentCtx: ContentContext = initialContentContext;\n\n  @provide({ context: settingsContext })\n  settingsCtx: SettingsContext = initialSettingsContext;\n\n  @state()\n  settingsVisible: boolean = false;\n\n  constructor() {\n    super();\n    \n    init().then(() => {\n      const resp = add(1, 2);\n      console.log(resp);\n    });\n\n    this.addEventListener(UpdateSettingsContextEvent.eventName, ((e: UpdateSettingsContextEvent) => {\n      this.settingsCtx = { ...e.detail };\n    }) as EventListener);\n\n    this.addEventListener(UpdateContentContextEvent.eventName, ((e: UpdateContentContextEvent) => {\n      this.contentCtx = { ...e.detail };\n    }) as EventListener);\n\n    this.addEventListener(ShowSettingsMenuEvent.eventName, ((e: ShowSettingsMenuEvent) => {\n      this.settingsVisible = e.detail.visible;\n    }) as EventListener);\n  }\n\n  override render() {\n    return html`\n      <main class=\"nekomata-main\">\n        <div class=\"nekomata-main__container\">\n          <icon-burguer @click=${() => { this.settingsVisible = true }} style=\"position: absolute; left: 1rem; top: 1rem;\"></icon-burguer>\n          <settings-menu .active=${this.settingsVisible}></settings-menu>\n          <file-uploader></file-uploader>\n        </div>\n      </main>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'nekomata-main': Nekomata;\n  }\n}\n"]}