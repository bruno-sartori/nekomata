{"version":3,"file":"editor-toolbar.js","sourceRoot":"","sources":["../../../src/components/editor/editor-toolbar.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACzD,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AAEvE,OAAO,iBAAiB,MAAM,4BAA4B,CAAC;AAC3D,OAAO,uBAAuB,CAAC;AAC/B,OAAO,6BAA6B,CAAC;AACrC,OAAO,uBAAuB,CAAC;AAC/B,OAAO,wBAAwB,CAAC;AAChC,OAAO,6BAA6B,CAAC;AAG9B,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;QAIL,YAAO,GAAwB,EAAE,CAAC;QAK1B,WAAM,GAAwB,EAAE,CAAC;IAmE3C,CAAC;IAhEU,OAAO,CAAC,iBAAuC;QACtD,IAAI,iBAAiB,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAM,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;4BASa,IAAI,CAAC,SAAS;;;;;;;;4BAQd,IAAI,CAAC,UAAU;;;;;;;;KAQtC,CAAC;IACJ,CAAC;IAEO,SAAS;QACf,MAAM,KAAK,GAAG,UAAU,CAAC;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC9B,MAAM,YAAY,GAAiB;YACjC,KAAK;YACL,KAAK,EAAE;gBACL,GAAG,KAAK;aACT;SACF,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAE/B,IAAI,CAAC,aAAa,CAAC,IAAI,iBAAiB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;IACrG,CAAC;IAEO,UAAU;QAChB,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI;YAChC,QAAQ,EAAE,IAAI,CAAC,MAAM;SACtB,CAAC;QAEF,MAAM,OAAO,GAAG,+BAA+B,GAAG,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3F,MAAM,IAAI,GAAG,qBAAqB,CAAC;QAEnC,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;QACtB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,MAAM,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;;AA1Ee,oBAAM,GAAG,kBAAkB,AAArB,CAAsB;AAG5C;IADC,KAAK,EAAE;8CAC0B;AAGlC;IADC,KAAK,EAAE;4CACS;AAPN,aAAa;IADzB,aAAa,CAAC,gBAAgB,CAAC;GACnB,aAAa,CA4EzB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { editorToolbarStyle } from '../../styles/editor-toolbar.style';\nimport { ChapterRange, RangeTimings } from '../../types';\nimport ChapterAddedEvent from '../../events/chapter-added';\nimport '../../icons/icon-plus';\nimport '../../icons/icon-redo-arrow';\nimport '../../icons/icon-save';\nimport '../../icons/icon-trash';\nimport '../../icons/icon-undo-arrow';\n\n@customElement('editor-toolbar')\nexport class EditorToolbar extends LitElement {\n  static override styles = editorToolbarStyle;\n  \n  @state()\n  timings: Array<RangeTimings> = [];\n\n  @state()\n  files?: FileList;\n\n  private ranges: Array<ChapterRange> = [];\n  private selectedFile: any;\n\n  override updated(changedProperties: Map<string, unknown>) {\n    if (changedProperties.has(\"files\") && (this.files?.length ?? 0) > 0) {\n      this.selectedFile = this.files![0];\n    }\n  }\n\n  override render() {\n    return html`\n      <div class=\"toolbar\">\n        <div class=\"toolbar__group\">\n          <button title=\"undo\" class=\"toolbar__button\">\n          <icon-undo-arrow></icon-undo-arrow>\n          </button>\n          <button title=\"redo\" class=\"toolbar__button\">\n            <icon-redo-arrow></icon-redo-arrow>\n          </button>\n          <button @click=\"${this.saveRange}\" title=\"add\" class=\"toolbar__button\">\n            <icon-plus></icon-plus>\n          </button>\n        </div>\n        <div class=\"toolbar__group\">\n          <strong class=\"toolbar__timeinfo text\" id=\"timeInfo\">00:00:00 / 00:00:00</strong>\n        </div>\n        <div class=\"toolbar__group\">\n          <button @click=\"${this.exportJson}\" title=\"save\" class=\"toolbar__button\">\n            <icon-save></icon-save>\n          </button>\n          <button title=\"delete\" class=\"toolbar__button\">\n            <icon-trash></icon-trash>\n          </button>\n        </div>\n      </div>\n    `;\n  }\n\n  private saveRange() {\n    const title = 'chapters';\n    const times = this.timings[0];\n    const chapterRange: ChapterRange = {\n      title,\n      range: {\n        ...times\n      }\n    };\n\n    this.ranges.push(chapterRange);\n\n    this.dispatchEvent(new ChapterAddedEvent({ bubbles: true, composed: true, detail: chapterRange }));\n  }\n\n  private exportJson() {\n    const json = {\n      fileName: this.selectedFile.name,\n      chapters: this.ranges,\n    };\n\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(json));\n    const name = 'video-chapters.json';\n\n    const anchor = document.createElement('a');\n    anchor.href = dataStr;\n    anchor.download = name;\n    anchor.click();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'editor-toolbar': EditorToolbar;\n  }\n}\n"]}