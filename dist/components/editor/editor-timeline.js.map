{"version":3,"file":"editor-timeline.js","sourceRoot":"","sources":["../../../src/components/editor/editor-timeline.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAkB,IAAI,EAAE,MAAM,KAAK,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,mBAAmB,EAAE,MAAM,oCAAoC,CAAC;AACzE,OAAO,mBAAmB,CAAC;AAC3B,OAAO,+BAA+B,CAAC;AACvC,OAAO,iBAAiB,MAAM,4BAA4B,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AAInD,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAW5C;QACE,KAAK,EAAE,CAAC;QARV,YAAO,GAAwB,EAAE,CAAC;QAK1B,iBAAY,GAA0B,EAAE,CAAC;QAK/C,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAoB,EAAE,EAAE;YAC3E,MAAM,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnC,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACtC,CAAC,CAAkB,CAAC,CAAC;IACvB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;gBAKC,IAAI,CAAC,YAAY;;;wCAGO,IAAI,CAAC,OAAO,sBAAsB,IAAI,CAAC,gBAAgB;;;;KAI1F,CAAC;IACJ,CAAC;IAEO,YAAY,CAAC,QAAgB,EAAE,MAA2B;QAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,QAAQ,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC;YACjD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAA;qCACI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,CAAC,EAAE,MAAM,CAAC;OACnG,CAAC,CAAC;QACL,CAAC;IACH,CAAC;;AA1Ce,qBAAM,GAAG,mBAAmB,AAAtB,CAAuB;AAG7C;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;+CACQ;AAGlC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wDACS;AAPzB,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CA4C1B","sourcesContent":["import { LitElement, TemplateResult, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { editorTimelineStyle } from '../../styles/editor-timeline.style';\nimport './editor-playback';\nimport '../timeline/timeline-chapters';\nimport FillTimelineEvent from '../../events/fill-timeline';\nimport { getTimeString, isFloat } from '../../utils/time';\nimport { CurrentlyGrabbed, RangeTimings } from '../../types';\n\n@customElement('editor-timeline')\nexport class EditorTimeline extends LitElement {\n  static override styles = editorTimelineStyle;\n\n  @property({ type: Array })\n  timings: Array<RangeTimings> = [];\n\n  @property({ type: Object })\n  currentlyGrabbed?: CurrentlyGrabbed;\n\n  private timelineInfo: Array<TemplateResult> = [];\n\n  constructor() {\n    super();\n\n    this.addEventListener(FillTimelineEvent.eventName, ((e: FillTimelineEvent) => {\n      const duration = e.detail.duration;\n      const metric = e.detail.metric;\n      this.fillTimeline(duration, metric);\n    }) as EventListener);\n  }\n\n  override render() {\n    return html`\n      <div class=\"timeline\">\n        <div class=\"timeline__scroll\">\n          <div>\n            <div class=\"timeline__info\" id=\"timelineInfo\">\n              ${this.timelineInfo}\n            </div>\n            <timeline-chapters></timeline-chapters>\n            <editor-playback .timings=${this.timings} .currentlyGrabbed=${this.currentlyGrabbed}></editor-playback>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  private fillTimeline(duration: number, metric: 'hours' | 'minutes') {\n    for (let i = 0; i <= duration + 0.5; i = i + 0.5) {\n      this.timelineInfo.push(html`\n        <div class=\"timeline__time ${isFloat(i) ? 'timeline__time--half' : ''}\">${getTimeString(i, metric)}</div>\n      `);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'editor-timeline': EditorTimeline;\n  }\n}\n"]}